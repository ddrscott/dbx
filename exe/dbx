#!/usr/bin/env ruby

require 'bundler/setup'
require 'thor'
require 'dbx'
require 'pp'

# nodoc
# #rubocop:disable all
class CLI < Thor
  class_option :db, type: :string, banner: 'Database URL: adapter://user:pass@host:port/db_name'
  class_option :column_patterns, type: :array, banner: 'List of column patterns to override type info. Ex: phone:string external_ref:string ...'
  class_option :sample, type: :numeric, banner: 'Number of rows to sample for type detection', default: 100

  # contents of the Thor class
  desc 'types SRC', 'detect column types give a SRC CSV file'
  def types(src)
    handle_global_options
    DBX.column_types(src, sample_rows: options[:sample]).each do |col, type|
      puts "#{col},#{type}"
    end
  end

  desc 'create SRC', 'create a table with types from SRC CSV file'
  option :name
  option :force, type: :boolean
  def create(src)
    handle_global_options
    DBX.create_table(
      src,
      name: options[:name],
      force: options[:force]
    )
  end

  desc 'import SRC', 'import SRC CSV into table'
  option :name
  option :force, type: :boolean
  def import(src)
    handle_global_options
    DBX.import_table(
      src,
      name: options[:name],
      force: options[:force]
    )
  end

  desc 'diff TABLE_A TABLE_B', 'create diff table between TABLE_A and TABLE_B.'
  option :force, type: :boolean, banner: 'remove diff_ table if it exists'
  option :using, type: :array, banner: 'JOIN USING the columns list here. Ex: id'
  option :exclude_columns, type: :array, banner: 'Exclude columns from comparison and selection'
  def diff(table_a, table_b)
    handle_global_options
    DBX::Differ.diff(
      table_a: table_a,
      table_b: table_b,
      using: options[:using],
      exclude_columns: options[:exclude_columns],
      force: options[:force]
    )
  end

  desc 'import_diff SRC_A SRC_B', 'import then diff between SRC_A CSV and SRC_B CSV files.'
  option :force, type: :boolean, banner: 'remove diff_ table if it exists'
  option :using, type: :array, banner: 'JOIN USING the columns list here. Ex: id'
  option :exclude_columns, type: :array, banner: 'Exclude columns from comparison and selection'
  def import_diff(src_a, src_b)
    handle_global_options
    DBX::Differ.import_and_diff(
      src_a: src_a,
      src_b: src_b,
      using: options[:using],
      exclude_columns: options[:exclude_columns],
      force: options[:force]
    )
  end

  private

  def handle_global_options
    if options[:column_patterns]
      options[:column_patterns].each do |pair|
        pattern, type = pair.split(':').map(&:strip)
        patterns = (DBX.config['column_patterns'] ||= {})
        patterns[pattern] = type.to_sym
      end
    end

    if options[:sample]
      DBX.config['sample_rows'] = options[:sample]
    end

    if options[:db]
      DBX.config['db'] = options[:db]
    end
  end
end
CLI.start(ARGV)
